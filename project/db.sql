/******************************************************************************/
/*            Generated by IBExpert 2018.8.3.1 22.11.2018 6:55:02             */
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES UTF8;

SET CLIENTLIB 'C:\Program Files\Firebird\Firebird_2_5\WOW64\fbclient.dll';

CONNECT 'localhost:C:\Users\user\Documents\topaz\analytics\project\Win32\Debug\db\SHRFSPS.FDB' USER 'SYSDBA';



/******************************************************************************/
/*                                 Generators                                 */
/******************************************************************************/

CREATE GENERATOR GEN_ACTIONLOG_ID;
CREATE GENERATOR GEN_CASHFLOW_ID;
CREATE GENERATOR GEN_CHOSES_ID;
CREATE GENERATOR GEN_CONTRACTS_ID;
CREATE GENERATOR GEN_CTANKS_ID;
CREATE GENERATOR GEN_HOSES_ID;
CREATE GENERATOR GEN_INCOMESBYDISCHARGE_ID;
CREATE GENERATOR GEN_INOUTGSM_ID;
CREATE GENERATOR GEN_INOUTITEMS_ID;
CREATE GENERATOR GEN_INPUTGSM_ID;
CREATE GENERATOR GEN_IOTANKSHOSES_ID;
CREATE GENERATOR GEN_ITEMOUTCOMESBYPAYSHEET_ID;
CREATE GENERATOR GEN_ITEMOUTCOMESBYRETAIL_ID;
CREATE GENERATOR GEN_ITEMRESTS_ID;
CREATE GENERATOR GEN_ORDERS_ID;
CREATE GENERATOR GEN_OUTCOMESBYCOUPON_ID;
CREATE GENERATOR GEN_OUTCOMESBYOFFICE_ID;
CREATE GENERATOR GEN_OUTCOMESBYRETAIL_ID;
CREATE GENERATOR GEN_SESSIONS_ID;
CREATE GENERATOR GEN_TABLESLIST_ID;
CREATE GENERATOR GEN_TAHOA_ID;
CREATE GENERATOR GEN_TANKS_ID;
CREATE GENERATOR GEN_TDB_ITEMS_ID;
CREATE GENERATOR GEN_TECHRETURN_ID;
CREATE GENERATOR GEN_TRADEDOCSINBILL_ID;
CREATE GENERATOR GEN_USEROPTIONS_ID;
CREATE GENERATOR GEN_USERS_ID;
CREATE GENERATOR INOUTGSM;


/******************************************************************************/
/*                             Stored procedures                              */
/******************************************************************************/



SET TERM ^ ;

CREATE OR ALTER PROCEDURE ADDTANKS (
    AZSCODE VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    SESSION_ID INTEGER NOT NULL)
AS
BEGIN
  EXIT;
END^





CREATE OR ALTER PROCEDURE CALCINCOMES (
    SESSION_ID INTEGER NOT NULL,
    TANKNUM VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8)
RETURNS (
    VOLUME DOUBLE PRECISION NOT NULL)
AS
BEGIN
  SUSPEND;
END^





CREATE OR ALTER PROCEDURE CALCINCOMES0 (
    SESSION_ID INTEGER NOT NULL)
RETURNS (
    VOLUME DOUBLE PRECISION,
    SID INTEGER,
    TNUM VARCHAR(10) CHARACTER SET UTF8 COLLATE UTF8)
AS
BEGIN
  SUSPEND;
END^





CREATE OR ALTER PROCEDURE CALCOUTCOMES (
    SESSION_ID INTEGER NOT NULL,
    TANKNUM VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    HOSENUM INTEGER NOT NULL)
RETURNS (
    VOLUME DOUBLE PRECISION NOT NULL)
AS
BEGIN
  SUSPEND;
END^





CREATE OR ALTER PROCEDURE CALCREST (
    SESSION_ID INTEGER NOT NULL,
    TANKNUM VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8)
RETURNS (
    VOLUME DOUBLE PRECISION NOT NULL)
AS
BEGIN
  SUSPEND;
END^





CREATE OR ALTER PROCEDURE GETPRICE (
    "MOD" SMALLINT NOT NULL,
    SESSION_ID INTEGER NOT NULL,
    WARECODE VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8)
RETURNS (
    PRICE DOUBLE PRECISION NOT NULL)
AS
BEGIN
  SUSPEND;
END^





CREATE OR ALTER PROCEDURE GIOPRICE (
    ID INTEGER NOT NULL)
RETURNS (
    PRICE DOUBLE PRECISION)
AS
BEGIN
  SUSPEND;
END^





CREATE OR ALTER PROCEDURE LOADTS (
    SESSION_ID INTEGER NOT NULL)
AS
BEGIN
  EXIT;
END^





CREATE OR ALTER PROCEDURE OUTCOMEPM (
    SESSION_ID INTEGER NOT NULL,
    PM VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8)
RETURNS (
    VOLUME DOUBLE PRECISION NOT NULL)
AS
BEGIN
  SUSPEND;
END^





CREATE OR ALTER PROCEDURE RESTOREIOTHREC (
    SESSION_ID INTEGER NOT NULL,
    AZSCODE VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    TANKNUM VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    HOSENUM INTEGER NOT NULL)
AS
BEGIN
  EXIT;
END^





CREATE OR ALTER PROCEDURE RESTOREIOTHREC_I (
    SESSION_ID INTEGER,
    TANKNUM VARCHAR(10) CHARACTER SET UTF8 COLLATE UTF8)
AS
BEGIN
  EXIT;
END^






SET TERM ; ^



/******************************************************************************/
/*                                   Tables                                   */
/******************************************************************************/



CREATE TABLE ACTIONLOG (
    ID       INTEGER NOT NULL,
    ADATE    TIMESTAMP NOT NULL,
    USER_ID  INTEGER NOT NULL,
    MSG      VARCHAR(200) CHARACTER SET UTF8 COLLATE UTF8
);

CREATE TABLE CASHFLOW (
    ID           INTEGER NOT NULL,
    SESSION_ID   INTEGER NOT NULL,
    DOCTYPEID    INTEGER NOT NULL,
    DOCTYPENAME  VARCHAR(50) CHARACTER SET UTF8 COLLATE UTF8,
    CASHID       INTEGER NOT NULL,
    CASHNAME     VARCHAR(50) CHARACTER SET UTF8 COLLATE UTF8,
    REMARK       VARCHAR(10) CHARACTER SET UTF8 COLLATE UTF8,
    AMOUNT       DOUBLE PRECISION NOT NULL
);

CREATE TABLE CHOSES (
    ID       INTEGER NOT NULL,
    HOSENUM  INTEGER NOT NULL,
    TANKNUM  VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    AZSCODE  VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8
);

CREATE TABLE CONTRACTS (
    ID            INTEGER NOT NULL,
    NOMER         VARCHAR(128) CHARACTER SET UTF8 COLLATE UTF8,
    PARTNER_CODE  VARCHAR(12) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    NAME          VARCHAR(100) CHARACTER SET UTF8 COLLATE UTF8
);

CREATE TABLE CONTRAGENTS (
    CODE  VARCHAR(12) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    NAME  VARCHAR(100) CHARACTER SET UTF8 COLLATE UTF8
);

CREATE TABLE CTANKS (
    ID       INTEGER NOT NULL,
    TANKNUM  VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    AZSCODE  VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8
);

CREATE TABLE FIRMS (
    CODE  VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    NAME  VARCHAR(50) CHARACTER SET UTF8 NOT NULL COLLATE UTF8
);

CREATE TABLE HOSES (
    ID            SMALLINT NOT NULL,
    SESSION_ID    INTEGER NOT NULL,
    HOSENUM       INTEGER NOT NULL,
    STARTCOUNTER  DOUBLE PRECISION NOT NULL,
    ENDCOUNTER    DOUBLE PRECISION NOT NULL,
    PUMPNUM       INTEGER NOT NULL,
    NUMINPUMP     INTEGER NOT NULL,
    HOSETYPE      VARCHAR(16) CHARACTER SET UTF8 COLLATE UTF8,
    TANKNUM       VARCHAR(10) CHARACTER SET UTF8 COLLATE UTF8
);

CREATE TABLE INCOMESBYDISCHARGE (
    ID              INTEGER NOT NULL,
    SESSION_ID      INTEGER NOT NULL,
    ODT             TIMESTAMP NOT NULL,
    DOCNUMBER       VARCHAR(12) CHARACTER SET UTF8 COLLATE UTF8,
    DOCCARNUMBER    VARCHAR(10) CHARACTER SET UTF8 COLLATE UTF8,
    TANKNUM         VARCHAR(10) CHARACTER SET UTF8 COLLATE UTF8,
    FUELNAME        VARCHAR(100) CHARACTER SET UTF8 COLLATE UTF8,
    FUELEXTCODE     VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    DENSITY         DOUBLE PRECISION NOT NULL,
    MASS            DOUBLE PRECISION NOT NULL,
    VOLUME          DOUBLE PRECISION NOT NULL,
    DISCREPANCY     DOUBLE PRECISION,
    PRICE           DOUBLE PRECISION,
    DOCTEMPERATURE  DOUBLE PRECISION,
    PARTNERNAME     VARCHAR(50) CHARACTER SET UTF8 COLLATE UTF8,
    PARTNEREXTCODE  VARCHAR(12) CHARACTER SET UTF8 NOT NULL COLLATE UTF8
);

CREATE TABLE INOUTGSM (
    ID            INTEGER NOT NULL,
    SESSION_ID    INTEGER NOT NULL,
    TBL           VARCHAR(3) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    DIRECTION     INTEGER NOT NULL,
    CLIENT_CODE   VARCHAR(12) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    CONTRACT_ID   INTEGER NOT NULL,
    PAYMENT_CODE  VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    WARE_CODE     VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    AMOUNT        DOUBLE PRECISION NOT NULL,
    EI            VARCHAR(10) CHARACTER SET UTF8 COLLATE UTF8,
    VOLUME        DOUBLE PRECISION NOT NULL,
    DENSITY       DOUBLE PRECISION NOT NULL,
    PRICE         DOUBLE PRECISION NOT NULL,
    SUMM          DOUBLE PRECISION NOT NULL,
    NDS           VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    WHOLE         DOUBLE PRECISION NOT NULL,
    LASTUSER_ID   INTEGER NOT NULL,
    UPDATED_AT    TIMESTAMP NOT NULL,
    STATE         INTEGER DEFAULT 0 NOT NULL,
    AZSCODE       VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    TANKNUM       VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8
);

CREATE TABLE INOUTITEMS (
    ID            INTEGER NOT NULL,
    SESSION_ID    INTEGER NOT NULL,
    TBL           VARCHAR(3) CHARACTER SET UTF8 COLLATE UTF8,
    DIRECTION     INTEGER NOT NULL,
    CLIENT_CODE   VARCHAR(12) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    CONTRACT_ID   INTEGER NOT NULL,
    PAYMENT_CODE  VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    ITEM_CODE     VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    AMOUNT        DOUBLE PRECISION NOT NULL,
    EI            VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    PRICE         DOUBLE PRECISION NOT NULL,
    SUMM          DOUBLE PRECISION NOT NULL,
    NDS           VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    WHOLE         DOUBLE PRECISION NOT NULL,
    QUANTITY      INTEGER NOT NULL,
    LASTUSER_ID   INTEGER NOT NULL,
    UPDATED_AT    TIMESTAMP NOT NULL,
    STATE         INTEGER NOT NULL,
    AZSCODE       VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8
);

CREATE TABLE IOTANKSHOSES (
    ID               INTEGER NOT NULL,
    SESSION_ID       INTEGER NOT NULL,
    TANKNUM          VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    STARTFUELVOLUME  DOUBLE PRECISION NOT NULL,
    ENDFACTVOLUME    DOUBLE PRECISION NOT NULL,
    DENSITY          DOUBLE PRECISION NOT NULL,
    TEMPERATURE      DOUBLE PRECISION NOT NULL,
    HEIGHT           DOUBLE PRECISION NOT NULL,
    MASS             DOUBLE PRECISION NOT NULL,
    WATER            DOUBLE PRECISION NOT NULL,
    DEADREST         DOUBLE PRECISION NOT NULL,
    DEADRESTLITER    DOUBLE PRECISION NOT NULL,
    WARECODE         VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    HOSENUM          INTEGER NOT NULL,
    STARTCOUNTER     DOUBLE PRECISION NOT NULL,
    ENDCOUNTER       DOUBLE PRECISION NOT NULL,
    PUMPNUM          INTEGER,
    NUMINPUMP        INTEGER,
    HOSETYPE         VARCHAR(16) CHARACTER SET UTF8 COLLATE UTF8,
    LASTUSER_ID      INTEGER NOT NULL,
    UPDATED_AT       TIMESTAMP NOT NULL,
    STATE            INTEGER DEFAULT 0 NOT NULL,
    AZSCODE          VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    VOLUME           DOUBLE PRECISION NOT NULL,
    INVOL            DOUBLE PRECISION
);

CREATE TABLE ITEMOUTCOMESBYPAYSHEET (
    ID                  INTEGER NOT NULL,
    SESSION_ID          INTEGER NOT NULL,
    ITEMNAME            VARCHAR(100) CHARACTER SET UTF8 COLLATE UTF8,
    ITEMEXTCODE         VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    PAYMENTMODENAME     VARCHAR(50) CHARACTER SET UTF8 COLLATE UTF8,
    PAYMENTMODEEXTCODE  VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    PARTNERNAME         VARCHAR(100) CHARACTER SET UTF8 COLLATE UTF8,
    PARTNEREXTCODE      VARCHAR(12) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    PARTNERINN          VARCHAR(20) CHARACTER SET UTF8 COLLATE UTF8,
    ITEMID              INTEGER NOT NULL,
    ITEMCODE            VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    ISRETURN            SMALLINT NOT NULL,
    QUANTITY            INTEGER NOT NULL,
    AMOUNT              DOUBLE PRECISION NOT NULL,
    PRICE               DOUBLE PRECISION NOT NULL
);

CREATE TABLE ITEMOUTCOMESBYRETAIL (
    ID                  INTEGER NOT NULL,
    SESSION_ID          INTEGER NOT NULL,
    ITEMNAME            VARCHAR(100) CHARACTER SET UTF8 COLLATE UTF8,
    ITEMEXTCODE         VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    ITEMGROUP           VARCHAR(20) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    ITEMGRPEXTCODE      VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    ISSERVICE           SMALLINT DEFAULT 0 NOT NULL,
    PAYMENTMODENAME     VARCHAR(50) CHARACTER SET UTF8 COLLATE UTF8,
    PAYMENTMODEEXTCODE  VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    PARTNERNAME         VARCHAR(100) CHARACTER SET UTF8 COLLATE UTF8,
    PARTNEREXTCODE      VARCHAR(12) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    PARTNERINN          VARCHAR(20) CHARACTER SET UTF8 COLLATE UTF8,
    ITEMID              INTEGER NOT NULL,
    NDS                 VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    UNIT                VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    FRDEPARTMENT        VARCHAR(50) CHARACTER SET UTF8 COLLATE UTF8,
    "HASH"              VARCHAR(48) CHARACTER SET UTF8 COLLATE UTF8,
    ITEMCODE            VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    ISRETURN            SMALLINT DEFAULT 0 NOT NULL,
    QUANTITY            INTEGER NOT NULL,
    AMOUNT              DOUBLE PRECISION NOT NULL,
    PRICEFASTTRADE      DOUBLE PRECISION NOT NULL,
    PRICEIN             DOUBLE PRECISION NOT NULL,
    PRICERETAIL         DOUBLE PRECISION NOT NULL
);

CREATE TABLE ITEMRESTS (
    ID              INTEGER NOT NULL,
    SESSION_ID      INTEGER NOT NULL,
    ITEMREST        INTEGER NOT NULL,
    STORAGEEXTCODE  VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    STORAGENAME     VARCHAR(50) CHARACTER SET UTF8 COLLATE UTF8,
    ITEMEXTCODE     VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    ITEMNAME        VARCHAR(100) CHARACTER SET UTF8 COLLATE UTF8,
    ITEMCODE        VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8
);

CREATE TABLE ITEMS (
    CODE   VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    NAME   VARCHAR(100) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    ICODE  VARCHAR(16) CHARACTER SET UTF8 COLLATE UTF8
);

CREATE TABLE ORDERS (
    ID          INTEGER NOT NULL,
    AZSCODE     VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    SESSION     INTEGER NOT NULL,
    ODT         TIMESTAMP NOT NULL,
    ORDERNUM    INTEGER NOT NULL,
    PUMPNUM     INTEGER NOT NULL,
    TANKSNUM    VARCHAR(10) CHARACTER SET UTF8 COLLATE UTF8,
    FUELPRICE   DOUBLE PRECISION NOT NULL,
    FUELVOLUME  DOUBLE PRECISION NOT NULL,
    FUELAMOUNT  DOUBLE PRECISION NOT NULL,
    FILENAME    VARCHAR(255) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    FUELEXCODE  VARCHAR(16) CHARACTER SET UTF8 COLLATE UTF8
);

CREATE TABLE OUTCOMESBYCOUPON (
    ID              INTEGER NOT NULL,
    SESSION_ID      INTEGER NOT NULL,
    ODT             TIMESTAMP NOT NULL,
    SESSIONID       INTEGER NOT NULL,
    DOCID           VARCHAR(16) CHARACTER SET UTF8 COLLATE UTF8,
    VOLUME          DOUBLE PRECISION NOT NULL,
    AMOUNT          DOUBLE PRECISION NOT NULL,
    COUPONCODE      VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    COUPONFUELNAME  VARCHAR(100) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    COUPONVOLUME    DOUBLE PRECISION NOT NULL,
    VOLUMEFACT      DOUBLE PRECISION NOT NULL,
    FUELEXTCODE     VARCHAR(16) CHARACTER SET UTF8 COLLATE UTF8
);

CREATE TABLE OUTCOMESBYOFFICE (
    ID                  INTEGER NOT NULL,
    SESSION_ID          INTEGER NOT NULL,
    ODT                 TIMESTAMP NOT NULL,
    TANKNUM             VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    HOSENAME            VARCHAR(10) CHARACTER SET UTF8 COLLATE UTF8,
    FUELNAME            VARCHAR(100) CHARACTER SET UTF8 COLLATE UTF8,
    FUELEXTCODE         VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    PAYMENTMODENAME     VARCHAR(50) CHARACTER SET UTF8 COLLATE UTF8,
    PAYMENTMODEEXTCODE  VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    REMARK              VARCHAR(10) CHARACTER SET UTF8 COLLATE UTF8,
    VOLUME              DOUBLE PRECISION NOT NULL,
    AMOUNT              DOUBLE PRECISION NOT NULL,
    MASS                DOUBLE PRECISION,
    ORIGPRICE           DOUBLE PRECISION NOT NULL,
    HASORDER            SMALLINT NOT NULL,
    PARTNEREXTCODE      VARCHAR(12) CHARACTER SET UTF8 COLLATE UTF8
);

CREATE TABLE OUTCOMESBYRETAIL (
    ID                  INTEGER NOT NULL,
    SESSION_ID          INTEGER NOT NULL,
    TANKNUM             VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    HOSENAME            VARCHAR(10) CHARACTER SET UTF8 COLLATE UTF8,
    FUELNAME            VARCHAR(100) CHARACTER SET UTF8 COLLATE UTF8,
    PAYMENTMODENAME     VARCHAR(50) CHARACTER SET UTF8 COLLATE UTF8,
    AGENTNAME           VARCHAR(50) CHARACTER SET UTF8 COLLATE UTF8,
    CARDCODE            VARCHAR(10) CHARACTER SET UTF8 COLLATE UTF8,
    PARTNERNAME         VARCHAR(50) CHARACTER SET UTF8 COLLATE UTF8,
    PARTNERINN          VARCHAR(20) CHARACTER SET UTF8 COLLATE UTF8,
    FUELEXTCODE         VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    PAYMENTMODEEXTCODE  VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    AGENTEXTCODE        VARCHAR(10) CHARACTER SET UTF8 COLLATE UTF8,
    PARTNEREXTCODE      VARCHAR(12) CHARACTER SET UTF8 COLLATE UTF8,
    VOLUME              DOUBLE PRECISION NOT NULL,
    AMOUNT              DOUBLE PRECISION NOT NULL,
    MASS                DOUBLE PRECISION,
    ORIGPRICE           DOUBLE PRECISION NOT NULL,
    REMARK              VARCHAR(10) CHARACTER SET UTF8 COLLATE UTF8,
    ORDERCOUNT          INTEGER
);

CREATE TABLE PAYMENTMODES (
    CODE  VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    NAME  VARCHAR(50) CHARACTER SET UTF8 COLLATE UTF8
);

CREATE TABLE SESSIONS (
    ID             INTEGER NOT NULL,
    AZSCODE        VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    SESSIONNUM     INTEGER NOT NULL,
    STARTDATETIME  TIMESTAMP NOT NULL,
    ENDDATETIME    TIMESTAMP NOT NULL,
    USERNAME       VARCHAR(50) CHARACTER SET UTF8 COLLATE UTF8,
    STATE          INTEGER NOT NULL
);

CREATE TABLE STATIONS (
    CODE     VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    NAME     VARCHAR(50) CHARACTER SET UTF8 COLLATE UTF8,
    EXTCODE  VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8
);

CREATE TABLE STORAGES (
    CODE  VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    NAME  VARCHAR(50) CHARACTER SET UTF8 COLLATE UTF8
);

CREATE TABLE TABLESLIST (
    ID         INTEGER NOT NULL,
    TABLENAME  VARCHAR(48) CHARACTER SET UTF8 NOT NULL COLLATE UTF8
);

CREATE TABLE TANKS (
    ID               SMALLINT NOT NULL,
    SESSION_ID       INTEGER NOT NULL,
    TANKNUM          VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    ENDDENSITY       DOUBLE PRECISION NOT NULL,
    STARTFUELVOLUME  DOUBLE PRECISION NOT NULL,
    ENDFACTVOLUME    DOUBLE PRECISION DEFAULT 0 NOT NULL,
    ENDTEMPERATURE   DOUBLE PRECISION DEFAULT 0 NOT NULL,
    ENDHEIGHT        DOUBLE PRECISION DEFAULT 0 NOT NULL,
    ENDMASS          DOUBLE PRECISION DEFAULT 0 NOT NULL,
    ENDWATER         DOUBLE PRECISION DEFAULT 0,
    DEADREST         DOUBLE PRECISION DEFAULT 0 NOT NULL,
    DEADRESTLITER    DOUBLE PRECISION DEFAULT 0 NOT NULL,
    WARECODE         VARCHAR(16) CHARACTER SET UTF8 COLLATE UTF8
);

CREATE TABLE TDB_ITEMS (
    ID             INTEGER NOT NULL,
    BILL_ID        INTEGER NOT NULL,
    ITEMNAME       VARCHAR(100) CHARACTER SET UTF8 COLLATE UTF8,
    ITEMEXTCODE    VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    ITEMISSERVICE  SMALLINT NOT NULL,
    ITEMCODE       VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    UNITNAME       VARCHAR(10) CHARACTER SET UTF8 COLLATE UTF8,
    UNITEXTCODE    VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    AMOUNT         DOUBLE PRECISION NOT NULL,
    QUANTITY       INTEGER NOT NULL,
    PRICE          DOUBLE PRECISION NOT NULL,
    NDSAMOUNT      DOUBLE PRECISION NOT NULL,
    TOTAL          DOUBLE PRECISION NOT NULL,
    NDSNAME        VARCHAR(10) CHARACTER SET UTF8 COLLATE UTF8,
    NDSEXTCODE     VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8
);

CREATE TABLE TECHRETURN (
    ID           INTEGER NOT NULL,
    SESSION_ID   INTEGER NOT NULL,
    NUM          INTEGER NOT NULL,
    ODT          TIMESTAMP NOT NULL,
    FUELNAME     VARCHAR(100) CHARACTER SET UTF8 COLLATE UTF8,
    FUELEXTCODE  VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    TANKNUM      VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    TANKEXTCODE  VARCHAR(10) CHARACTER SET UTF8 COLLATE UTF8,
    VOLUME       DOUBLE PRECISION NOT NULL,
    MASS         DOUBLE PRECISION NOT NULL,
    DENSITY      DOUBLE PRECISION NOT NULL
);

CREATE TABLE TRADEDOCSINBILL (
    ID               INTEGER NOT NULL,
    SESSION_ID       INTEGER NOT NULL,
    INBILLHID        INTEGER NOT NULL,
    NDOC             VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    DATEDOC          TIMESTAMP NOT NULL,
    PRICENAME        VARCHAR(50) CHARACTER SET UTF8 COLLATE UTF8,
    PRICEEXTCODE     VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    PARTNERNAME      VARCHAR(100) CHARACTER SET UTF8 COLLATE UTF8,
    PARTNEREXTCODE   VARCHAR(12) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    PARTNERINN       VARCHAR(20) CHARACTER SET UTF8 COLLATE UTF8,
    PARTNERKPP       VARCHAR(20) CHARACTER SET UTF8 COLLATE UTF8,
    STORAGESNAME     VARCHAR(50) CHARACTER SET UTF8 COLLATE UTF8,
    STORAGESEXTCODE  VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    FIRMSNAME        VARCHAR(50) CHARACTER SET UTF8 COLLATE UTF8,
    FIRMSEXTCODE     VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8
);

CREATE TABLE USEROPTIONS (
    ID            INTEGER NOT NULL,
    USER_ID       INTEGER NOT NULL,
    OPNAME1       VARCHAR(32) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    OPTVALUE1     VARCHAR(32) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    OPTFULLNAME1  VARCHAR(64) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    OPNAME2       VARCHAR(32) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    OPTVALUE2     VARCHAR(32) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    OPTFULLNAME2  VARCHAR(64) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    OPNAME3       VARCHAR(32) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    OPTFULLNAME3  VARCHAR(64) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    OPTVALUE3     SMALLINT NOT NULL
);

CREATE TABLE USERS (
    ID          INTEGER NOT NULL,
    LOGIN       VARCHAR(24) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    "PASSWORD"  VARCHAR(48) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    FIO         VARCHAR(100) CHARACTER SET UTF8 COLLATE UTF8,
    "ROLE"      INTEGER DEFAULT 0 NOT NULL,
    EMAIL       VARCHAR(64) CHARACTER SET UTF8 COLLATE UTF8,
    "POSITION"  VARCHAR(20) CHARACTER SET UTF8 COLLATE UTF8
);

CREATE TABLE WAREPRICES (
    SESSION_ID  INTEGER NOT NULL,
    WARE_CODE   VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    PRICE_R     DOUBLE PRECISION,
    PRICE_O     DOUBLE PRECISION
);

CREATE TABLE WARES (
    CODE     VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    NAME     VARCHAR(100) CHARACTER SET UTF8 COLLATE UTF8,
    PRICE_R  DOUBLE PRECISION,
    PRICE_O  DOUBLE PRECISION,
    INCL     SMALLINT DEFAULT 1 NOT NULL
);

INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('А000008936', '&quot;ТехМас&quot;, ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('EMPTY', 'Empty');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('П000000067', '&quot;Петросервис&quot;, ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('000000010', 'Молния, ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('000000034', 'Восход, СПК Малопургинского р-на');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-000000012', 'МОУ СОШ с. Уром');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000016', 'МОУ СОШ Ильинская');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000017', 'МОУ СОШ д.Нижние Юри');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-000000011', 'МОУ СОШ Старомоньинская');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000018', 'МОУ СОШ, д. Новая Монья Малопургинского района');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000019', 'МОУ СОШ, д. Новая Монья Малопургинского района');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000028', 'Администрация МО &quot;Ильинское&quot;');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000025', 'Молния, ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000026', 'Восход, СПК Малопургинского р-на');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000013', 'МОУ Бобья-Учинская школа');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000011', 'МОУ СОШ Старомоньинская');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000012', 'МОУ СОШ с. Уром');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000029', 'Администрация МО &quot;Старомоньинское&quot;');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000030', 'Администрация МО &quot;Бобья-Учинское&quot;');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('000000001', '&quot;Альфа Транс&quot;,ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('000000069', 'Рассвет,  СПК Малопургинский р -он');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('1', '.Долив остатка дозы');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('А000004179', 'М.О.&quot;Юдинское&quot;');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('А000000191', 'Астра, ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('А000008398', 'Администрация МО &quot;Пыбьинское&quot;');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000015', 'Астра, ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000032', 'ИП Корепанов Л.И.');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000047', 'Администрация МО &quot;Воегуртское&quot;');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000024', 'Администрация МО &quot;Пыбьинское&quot;');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000046', 'Ип, Глава КФХ Колотов Сергей Александрович');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000033', 'ООО &quot;Кестымский&quot;');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000023', 'М.О.&quot;Юдинское&quot;');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('А000008706', '&quot;УГТ&quot;, ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('А000008099', '&quot;Нефть&quot;, ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('нет', 'Долив остатка дозы');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('А000009778', 'ПЕТРОСЕРВИС, ООО (фасовка)');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('А000002530', 'БУЗ УР РСД "Селычка"');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('А000009182', 'ИП ГКХФ Веретенникова Ираида Ивановна');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('А000009868', 'Администрация МО &quot;Ворцинсое&quot;');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('А000009076', 'ООО &quot;Агрояр&quot;');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('П000000064', '&quot;Петросервис&quot;, ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('А000009829', 'МБУ ДО &quot;ЦВР &quot;Детский парк&quot;');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('А000009590', ' &quot;МК&quot; ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('А000008105', '&quot;Нефть&quot; ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('A000008936', 'ООО,,ТехМакс&quot;');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('А000006988', 'NO NAME');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('А000009889', 'NO NAME');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('А000009917', 'NO NAME');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('УТ-00000001', 'NO NAME');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('1123', '1222');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000109', 'XXXXX');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000027', 'NO NAME');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000049', 'NO NAME');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('УТ-00000002', 'Розничный покупатель');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000001', 'ВКУСНАЯ ВОДА ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000002', 'Шелко ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000003', 'ПАО СБЕРБАНК');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000006', 'УФК по Удмуртской Республике (МЕЖРАЙОННАЯ ИФНС РОССИИ № 10 ПО УДМУРТСКОЙ РЕСПУБЛИКЕ)');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000007', 'Ситилинк ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000004', 'МГД ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000005', 'УРАЛЭНЕРГО-УР ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000008', 'Машкова  Татьяна  Алексеевна');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000009', 'УДМУРТСКИЙ ЦСМ ФБУ');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000010', 'КОТЕГОВО ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000014', 'РСД СЕЛЫЧКА МЗ УР БУЗ УР');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000020', 'ОЛИМП ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000021', 'ПЕТРОСЕРВИС ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000022', 'ПЯТЬ КОВРИКОВ ПТК ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000031', 'СПК (КОЛХОЗ) "РАССВЕТ"');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000034', 'УТЭК ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000035', 'ИНТЕРА ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000036', 'ЛИК ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000037', 'МУПТИ ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000038', 'ФКП ОБРАЗОВАТЕЛЬНОЕ УЧРЕЖДЕНИЕ № 148');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000039', 'АДМИНИСТРАЦИЯ МУНИЦИПАЛЬНОГО ОБРАЗОВАНИЯ "ЛЮКСКОЕ"');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000048', 'Балезинская АЗС');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000040', 'УФК по Ленинградской области (МЕЖРАЙОННАЯ ИФНС РОССИИ № 7 ПО ЛЕНИНГРАДСКОЙ ОБЛАСТИ)');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000041', 'УФК по Удмуртской Республике (МЕЖРАЙОННАЯ ИФНС РОССИИ № 7 ПО УДМУРТСКОЙ РЕСПУБЛИКЕ)');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000042', 'УФК по Удмуртской Республике (МЕЖРАЙОННАЯ ИФНС РОССИИ № 6 ПО УДМУРТСКОЙ РЕСПУБЛИКЕ)');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000043', 'УФК по Удмуртской Республике (МЕЖРАЙОННАЯ ИФНС РОССИИ № 11 ПО УДМУРТСКОЙ РЕСПУБЛИКЕ)');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000044', 'УФК по Удмуртской Республике (МЕЖРАЙОННАЯ ИФНС РОССИИ № 2 ПО УДМУРТСКОЙ РЕСПУБЛИКЕ)');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000045', 'ГУ-ЛЕНИНГРАДСКОЕ РО ФОНДА СОЦИАЛЬНОГО СТРАХОВАНИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000050', 'ПРАЙД ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000051', 'КОМУС-ПРИВОЛЖЬЕ ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000052', 'КАРСОВАЙСКАЯ СРЕДНЯЯ ШКОЛА МБОУ');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000053', 'ВДНХ ООО ТПФ');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000054', 'ТОПАЗ-ЭЛЕКТРО ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000055', 'АЙТИГРУПП ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000056', 'АРКТУР-СЕРВИС ТОРГОВЫЙ ДОМ ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000057', 'ЦТО МГД ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000058', 'ИНТЕЛЛЕКТ ИТ ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000059', 'ЯРУС ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000060', 'КОНДОР ООО ЧОП');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000061', 'БС-КОНСАЛТ ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000062', 'КРИПТОРА ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000063', 'ДЕЛОВЫЕ ЛИНИИ ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000064', 'БАЛЕЗИНСКОЕ СМП ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000065', 'ЭЛЛИПС ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000066', 'МАГЕЛЛАН ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000067', 'Галкин Роман Александрович ИП');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000068', 'РОСТЕЛЕКОМ ПАО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000069', 'КОБРА ООО ОА ЧОП');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000070', 'ЭЛЕКТРИЧЕСКИЕ СЕТИ УДМУРТИИ ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000071', 'ОХРАНА РОСГВАРДИИ ФГУП');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000072', 'ГАРАНТ-ТОРГСЕРВИС ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000073', 'Рабаев Ильнур Раифович ИП');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000074', 'МЕГАЛЮКС ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000075', 'ФОРВАРД СЕРВИС ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000076', 'Амосова Елена Юрьевна ИП');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000077', 'ТЕХОБОРУДОВАНИЕ ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000078', 'БЕНЗОИНСТРУМЕНТ ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000079', 'МИР ДИОДОВ ПОВОЛЖЬЕ ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000080', 'ФРОНДА МЕБЕЛЬ ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000081', 'Ардашев Михаил Анатольевич ИП');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000082', 'БЛАНКИЗДАТ ПАО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000083', 'МАРК-ИТТ ТК ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000084', 'САПСАН ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000085', 'РЕГ.РУ ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000086', 'УФК по г.Санкт-Петербургу (МРИ ФНС России №11по Санкт-Петербургу)');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000087', 'ПОЧТА РОССИИ УФПС УДМУРТСКОЙ РЕСПУБЛИКИ, ФИЛИАЛ ФГУП');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000088', 'Лазерные технологии ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000089', 'Арктур-Сервис ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000090', 'Волхов ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000091', 'Зетта Страхование  ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000092', 'ИТ Консалтинг ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000093', 'ЭНЕРГЕТИК - 2 ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000094', 'УФК по Удмуртской Республике (МВД по Удмуртской Республике) л/сч 04131354150');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000095', 'Тензор-Удмуртия ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000096', 'АСПЭК-Центр ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000097', 'Форвард-Авто ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000098', 'НИ-ПЛЮС ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000099', 'ЭКОХИМТРЕЙД-НК ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000100', 'Иж-Лада ОАО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000101', 'СЛУЖБА ЗАКАЗЧИКА КИЗНЕРСКОГО РАЙОНА МУП');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000102', 'КОПИПРИНТ ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000103', 'ЭКОЛАЙН ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000104', 'УВО ВНГ РОССИИ ПО УДМУРТСКОЙ РЕСПУБЛИКЕ ФГКУ');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000105', 'КРЫЛАТСКИЙ ТЗК ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000106', 'УГТ ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000107', 'БАШТРЕЙД ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000108', 'БАРС ТД ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000110', 'ГАЗПРОМ НЕФТЕХИМ САЛАВАТ ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000111', 'КИЗНЕРСКАЯ РАЙСББЖ БУ УР');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000112', 'Управление Федерального казначейства по Ленинградской области Отделение ПФР по Санкт-Петербургу и Ле');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000113', 'ФИЛИАЛ № 7806 БАНКА ВТБ (ПАО)');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000114', 'Компания Тензор ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000115', 'Н.Т.Граф ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000116', 'Акционерное общество "Ижевские электрические сети"');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000117', 'Бухгалтерская контора ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000118', 'НефтеПродуктТрейд ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000119', 'ДНС РИТЕЙЛ ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000120', 'КАРТСВЕТ ООО');
INSERT INTO CONTRAGENTS (CODE, NAME) VALUES ('00-00000121', 'РУССКАЯ КОМПАНИЯ ООО');

COMMIT WORK;

INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (359, 'ДП/В/БР/02/2018', '00-00000014', 'Продажа ведомости');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (360, 'ДП/В/К/03/2018', '00-00000018', 'Договор поставки № ДП/В/К/03/2018 от 29.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (361, 'ДП/В/01/2018', '00-00000025', 'ДП/В/01/2018 от 07.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (362, 'ДП/В/ИЛ/02/2018', '00-00000026', 'ДП/В/ИЛ/02/2018 от 07.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (363, 'ДП/В/ИЛ/03/2018', '00-00000027', 'Договор № ДП/В/ИЛ/03/2018 от 07.08.18');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (364, 'ДП/В/ИЛ/04/2018', '00-00000028', 'ДП/В/ИЛ/04/2018 от 09.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (365, 'ДП/В/ИЛ/05/2018', '00-00000029', 'ДП/В/ИЛ/05/2018 от 09.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (366, 'ДП/В/ИЛ/06/2018', '00-00000030', 'ДП/В/ИЛ/06/2018 от 17.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (367, 'ДП/В/ИЛ/07/2018', '00-00000011', 'ДП/В/ИЛ/07/2018 от 17.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (368, 'ДП/В/ИЛ/08/2018', '00-00000016', 'ДП/В/ИЛ/08/2018 от 17.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (369, 'ДП/В/ИЛ/09/2018', '00-00000031', 'Продажа ведомости №ДП/В/ИЛ/09/2018 от 20.08.18');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (370, 'ДП/В/ИЛ/10/2018', '00-00000017', 'ДП/В/ИЛ/10/2018 от 20.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (371, 'ДП/В/ИЛ/11/2018', '00-00000012', 'ДП/В/ИЛ/11/2018 от 20.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (372, 'ДП/В/ИЛ/11/2018', '00-00000019', 'ДП/В/ИЛ/11/2018 от 20.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (373, 'ДП/В/ИЛ/13/2018', '00-00000013', 'ДП/В/ИЛ/13/2018 от 21.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (374, 'ДП/Н/001/2018', '00-00000033', 'ДП/Н/001/2018 от 03.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (375, 'ДП/Н/002/2018', '00-00000010', 'Мелкий опт');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (376, 'ДП/В/БА/01/2018', '00-00000034', 'Продажа ведомости');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (377, 'ДП/В/БА/02/2018', '00-00000015', 'Продажа ведомости');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (378, 'ДП/В/БА/3/2018', '00-00000032', 'Продажа ведомости');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (379, 'ДП/В/БА/04/2018', '00-00000023', 'ДП/В/БА/04/2018 олт 16.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (380, 'ДП/В/БА/09/2018', '00-00000024', 'ДП/В/БА/09/2018 от 24.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (381, 'ДП/В/БА/06/2018', '00-00000039', 'ДП/В/БА/06/2018 от 21.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (382, 'ДП/8/БА/27/2018', '00-00000047', 'ДП/8/БА/27/2018 от 03.09.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (383, '00001', '00-00000007', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (384, '21-09/2018', '00-00000038', '21-09/2018 от 10.09.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (385, 'ДП/В/БА/9/2018', '00-00000052', 'ДП/В/БА/9/2018 от 03.09.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (386, 'БСК-2018-У0077', '00-00000061', 'Договор услуг №БСК-2018-У0077от 14.09.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (387, '6922227', '00-00000068', 'Договор  №6922227 от 23.07.18');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (388, '37/П-18', '00-00000069', 'Договор об экстренном выезде по сигналу "Тревога"');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (389, '47/ОПС-18', '00-00000060', 'Договор на тех.обсл.систем охранно-пожарной сигнализации и систем оповещения и эвакуации про пожаре');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (390, '09/54-18', '00-00000070', 'Договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (391, '25/07/18', '00-00000073', 'Договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (392, '55', '00-00000074', 'Договор по доставке');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (393, '166-ФМ', '00-00000080', 'Договор №166-ФМ от 18.07.18');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (394, '293801', '00-00000083', 'Договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (395, '41071', '00-00000001', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (396, '71', '00-00000075', 'Договор на техническое обслуживание и ремонт автомобилей №71 от 18.09.18');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (397, '6.3.10-11Д/17/0935', '00-00000087', 'Договор №6.3.10-11Д/17/0935 от 06.09.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (398, 'Т/133', '00-00000071', 'Договор №Т/133 от 03.08.18');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (399, '107', '00-00000101', 'Договор по транспортированию ТКО №107 от 10.09.18');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (400, '01-003/М-18', '00-00000066', 'Договор аренды №01-003/М-18 от 24.07.18');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (401, '02-001/Э-18', '00-00000065', 'Договор аренды №02-001/Э-18 от 24.07.18(Б.Роща)');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (402, '02-002/Э-18', '00-00000065', 'Договор аренды №02-002/Э-18 от 24.07.18(Александровская)');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (403, '02-003/Э-18', '00-00000065', 'Договор аренды №02-003/Э-18 от 24.07.18(Балезино)');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (404, '02-004/Э-18', '00-00000065', 'Договор аренды №02-004/Э-18 от 24.07.18(Ильинское)');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (405, '02-005/Э-18', '00-00000065', 'Договор аренды №02-005/Э-18 от 24.07.18(Кизнер)');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (406, 'бн', '00-00000054', 'Договор по использов.прогр.обеспеч. №бн от 27.07.18');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (407, '01/08', '00-00000077', 'Договор поставки № 01/08 от 11.08.18');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (408, '', '00-00000004', 'Договор поставки');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (409, '312', '00-00000093', 'Договор подряда №312 от 03.08.18');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (410, 'СМП-43-У', '00-00000064', 'Договор на оказание услуг №СМП-43-У от 06.08.18');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (411, '289/18', '00-00000056', 'Договор поставки товара № 289/18 от 15.08.18');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (412, 'бн', '00-00000102', 'Договор на поставку товара и оказание услуг №бн от 20.08.18');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (413, 'ЭЛ-07/08/2018', '00-00000103', 'Договор на оказание услуг по трансп.и размещ.отходом №ЭЛ-07/08/2018 от 22.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (414, '76/2018', '00-00000090', 'Договор аренды №76/2018 от 26.07.18');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (415, '1', '00-00000072', 'Договор поставки №1 от 30.07.18');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (416, '0012608', '00-00000089', 'Договор на сервисное сопровождение №0012608 от 30.07.18');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (417, 'ПС-ЭВМ-001-2018', '00-00000021', 'Договор сублицензионный №ПС-ЭВМ-001-2018 от 30.07.18');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (418, 'ПС-ККМ-001-2018', '00-00000021', 'Договор купли-продажи №ПС-ККМ-001-2018 от 30.07.2018 (Штрих ФР,М)');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (419, 'ПС-ИП-002-2018', '00-00000021', 'Договор купли-продажи №ПС-ИП-002-2018 от 30.07.2018(товар)');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (420, '50', '00-00000062', 'Договор на оказание технической поддержки №50 от 19.07.18');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (421, '75-ШК/2018', '00-00000002', 'Договор займа №75-ШК/2018 от 10.07.2018(1 000 000,0)');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (422, '1807/42', '00-00000055', 'Договор лицензионный №1807/42 от 30.07.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (423, '5/6-КТС-166-2018', '00-00000104', 'Договор на оказание услуг №5/6-КТС-166-2018 от 03.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (424, 'ДП/В/БА/5/2018', '00-00000033', 'Договор поставки №ДП/В/БА/5/2018 от 29.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (425, '318001010109', '00-00000068', 'Договор  №318001010109 от 01.09.18(Ильинская,Б.Роща)');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (426, '70/18', '00-00000050', 'Договор по ремонту и тех.обсл.авто №70/18 от  25.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (427, '86-ШК/2018', '00-00000002', 'Договор поставки №86-ШК/2018  от 26.07.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (428, '815', '00-00000009', 'Договор по поверке средств измерений №815 от 15.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (429, '174-Пм/ПС-2018', '00-00000021', 'Договор поставки нефтепродуктов №174-Пм/ПС-2018 от 30.07.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (430, '31/Т', '00-00000099', 'Договор на оказание атотранспортных услгу №31/Т от 01.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (431, 'ТЗ01-13-00300', '00-00000105', 'Договор хранения №ТЗ01-13-00300 от 24.07.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (432, 'ТЗ01-12-00310', '00-00000105', 'Договор поставки нефтепродуктов №ТЗ01-12-00310 от 10.09.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (433, 'УГТ/ТЭ/001-18', '00-00000106', 'Договор транспортной экспедиции №УГТ/ТЭ/001-18 от 30.07.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (434, 'БТР-ПК-18-0140/ЗН', '00-00000107', 'Договор поставки №БТР-ПК-18-0140/ЗН от 20.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (436, '28', '00-00000108', 'Договор на оказание транспортно-экспедиционных услуг №28 от 13.08.2018');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (437, '', '00-00000007', 'Договор основной');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (439, '', '00-00000081', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (440, '', '00-00000082', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (441, '', '00-00000051', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (442, '', '00-00000084', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (443, '', '00-00000088', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (444, '', '00-00000053', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (445, '', '00-00000063', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (446, '', '00-00000022', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (447, '', '00-00000059', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (448, '', '00-00000067', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (449, '', '00-00000070', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (450, '', '00-00000058', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (451, '', '00-00000076', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (452, '', '00-00000079', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (453, '', '00-00000078', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (454, '', '00-00000005', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (455, '', '00-00000057', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (456, '', 'УТ-00000002', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (457, '', '00-00000092', 'Основной договор');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (458, 'бн', '00-00000115', 'Договор по изготовлению талонов  №бн от 12.07.18');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (459, '293801', '00-00000098', 'Договор №293801');
INSERT INTO CONTRACTS (ID, NOMER, PARTNER_CODE, NAME) VALUES (460, 'ДП/В/К/04/2018', '00-00000111', 'ДП/В/К/04/2018 от 24.09.2018');

COMMIT WORK;

INSERT INTO STATIONS (CODE, NAME, EXTCODE) VALUES ('006', '6', '001');
INSERT INTO STATIONS (CODE, NAME, EXTCODE) VALUES ('008', 'Петросервис', '002');
INSERT INTO STATIONS (CODE, NAME, EXTCODE) VALUES ('998', 'A', '003');
INSERT INTO STATIONS (CODE, NAME, EXTCODE) VALUES ('004', '4', '444');
INSERT INTO STATIONS (CODE, NAME, EXTCODE) VALUES ('005', '5', '009');
INSERT INTO STATIONS (CODE, NAME, EXTCODE) VALUES ('001', 'Ильинская', '0000001');
INSERT INTO STATIONS (CODE, NAME, EXTCODE) VALUES ('007', '7', '002');
INSERT INTO STATIONS (CODE, NAME, EXTCODE) VALUES ('003', '3', '003');
INSERT INTO STATIONS (CODE, NAME, EXTCODE) VALUES ('016', '16', 'ps016');
INSERT INTO STATIONS (CODE, NAME, EXTCODE) VALUES ('009', 'Петросервис dbl', '004');
INSERT INTO STATIONS (CODE, NAME, EXTCODE) VALUES ('002', '2', '002');
INSERT INTO STATIONS (CODE, NAME, EXTCODE) VALUES ('999', 'B', '999');
INSERT INTO STATIONS (CODE, NAME, EXTCODE) VALUES ('011', 'C', 'ccccc');

COMMIT WORK;

INSERT INTO TABLESLIST (ID, TABLENAME) VALUES (1, 'OutcomesByOffice');
INSERT INTO TABLESLIST (ID, TABLENAME) VALUES (2, 'OutcomesByRetail');
INSERT INTO TABLESLIST (ID, TABLENAME) VALUES (3, 'IncomesByDischarge');
INSERT INTO TABLESLIST (ID, TABLENAME) VALUES (4, 'ItemOutcomesByRetail');
INSERT INTO TABLESLIST (ID, TABLENAME) VALUES (5, 'TradeDocsInBill');
INSERT INTO TABLESLIST (ID, TABLENAME) VALUES (7, 'TechReturn');
INSERT INTO TABLESLIST (ID, TABLENAME) VALUES (8, 'CashFlow');
INSERT INTO TABLESLIST (ID, TABLENAME) VALUES (9, 'OutcomesByCoupon');
INSERT INTO TABLESLIST (ID, TABLENAME) VALUES (10, 'ItemRests');
INSERT INTO TABLESLIST (ID, TABLENAME) VALUES (11, 'Hoses');
INSERT INTO TABLESLIST (ID, TABLENAME) VALUES (12, 'Tanks');
INSERT INTO TABLESLIST (ID, TABLENAME) VALUES (13, 'ITEMOUTCOMESBYPAYSHEET');

COMMIT WORK;

INSERT INTO USERS (ID, LOGIN, "PASSWORD", FIO, "ROLE", EMAIL, "POSITION") VALUES (1, 'admin', '', 'admin a', 1, '33', 'admin');
INSERT INTO USERS (ID, LOGIN, "PASSWORD", FIO, "ROLE", EMAIL, "POSITION") VALUES (2, 'user1', '', 'user User', 0, '', 'dir');
INSERT INTO USERS (ID, LOGIN, "PASSWORD", FIO, "ROLE", EMAIL, "POSITION") VALUES (3, 'u1', 'u', 'u 1', 0, NULL, NULL);
INSERT INTO USERS (ID, LOGIN, "PASSWORD", FIO, "ROLE", EMAIL, "POSITION") VALUES (4, 'u2', 'u', 'u 2', 0, NULL, NULL);

COMMIT WORK;

INSERT INTO USEROPTIONS (ID, USER_ID, OPNAME1, OPTVALUE1, OPTFULLNAME1, OPNAME2, OPTVALUE2, OPTFULLNAME2, OPNAME3, OPTFULLNAME3, OPTVALUE3) VALUES (1, 1, 'last_sessions_count', '60', 'Last sessions count', 'AzsCode', '008', 'Azs Code', '', '', 1);
INSERT INTO USEROPTIONS (ID, USER_ID, OPNAME1, OPTVALUE1, OPTFULLNAME1, OPNAME2, OPTVALUE2, OPTFULLNAME2, OPNAME3, OPTFULLNAME3, OPTVALUE3) VALUES (2, 2, 'last_sessions_count', '14', 'Last sessions count', 'AzsCode', '003', 'Azs Code', '', '', 0);

COMMIT WORK;



/******************************************************************************/
/*                             Unique constraints                             */
/******************************************************************************/

ALTER TABLE CONTRACTS ADD CONSTRAINT UNQ1_CONTRACTS UNIQUE (NOMER, PARTNER_CODE);
ALTER TABLE IOTANKSHOSES ADD CONSTRAINT UNQ1_IOTANKSHOSES UNIQUE (SESSION_ID, TANKNUM, HOSENUM, AZSCODE);
ALTER TABLE ORDERS ADD CONSTRAINT UNQ1_ORDERS UNIQUE (AZSCODE, ODT, PUMPNUM);
ALTER TABLE USEROPTIONS ADD CONSTRAINT UNQ1_USEROPTIONS UNIQUE (USER_ID);


/******************************************************************************/
/*                                Primary keys                                */
/******************************************************************************/

ALTER TABLE ACTIONLOG ADD CONSTRAINT PK_ACTIONLOG PRIMARY KEY (ID);
ALTER TABLE CASHFLOW ADD CONSTRAINT PK_CASHFLOW PRIMARY KEY (ID);
ALTER TABLE CHOSES ADD CONSTRAINT PK_CHOSES PRIMARY KEY (ID);
ALTER TABLE CONTRACTS ADD CONSTRAINT PK_CONTRACTS PRIMARY KEY (ID);
ALTER TABLE CONTRAGENTS ADD CONSTRAINT PK_CONTRAGENTS PRIMARY KEY (CODE);
ALTER TABLE CTANKS ADD CONSTRAINT PK_CTANKS PRIMARY KEY (AZSCODE, TANKNUM);
ALTER TABLE FIRMS ADD CONSTRAINT PK_FIRMS PRIMARY KEY (CODE);
ALTER TABLE HOSES ADD CONSTRAINT PK_HOSES PRIMARY KEY (ID);
ALTER TABLE INCOMESBYDISCHARGE ADD CONSTRAINT PK_INCOMESBYDISCHARGE PRIMARY KEY (ID);
ALTER TABLE INOUTGSM ADD CONSTRAINT PK_INOUTGSM PRIMARY KEY (ID);
ALTER TABLE INOUTITEMS ADD CONSTRAINT PK_INOUTITEMS PRIMARY KEY (ID);
ALTER TABLE IOTANKSHOSES ADD CONSTRAINT PK_IOTANKSHOSES PRIMARY KEY (ID);
ALTER TABLE ITEMOUTCOMESBYPAYSHEET ADD CONSTRAINT PK_ITEMOUTCOMESBYPAYSHEET PRIMARY KEY (ID);
ALTER TABLE ITEMOUTCOMESBYRETAIL ADD CONSTRAINT PK_ITEMOUTCOMESBYRETAIL PRIMARY KEY (ID);
ALTER TABLE ITEMRESTS ADD CONSTRAINT PK_ITEMRESTS PRIMARY KEY (ID);
ALTER TABLE ITEMS ADD CONSTRAINT PK_ITEMS PRIMARY KEY (CODE);
ALTER TABLE ORDERS ADD CONSTRAINT PK_ORDERS PRIMARY KEY (ID);
ALTER TABLE OUTCOMESBYCOUPON ADD CONSTRAINT PK_OUTCOMESBYCOUPON PRIMARY KEY (ID);
ALTER TABLE OUTCOMESBYOFFICE ADD CONSTRAINT PK_OUTCOMESBYOFFICE PRIMARY KEY (ID);
ALTER TABLE OUTCOMESBYRETAIL ADD PRIMARY KEY (ID);
ALTER TABLE PAYMENTMODES ADD CONSTRAINT PK_PAYMENTMODES PRIMARY KEY (CODE);
ALTER TABLE SESSIONS ADD PRIMARY KEY (ID);
ALTER TABLE STATIONS ADD CONSTRAINT PK_STATIONS PRIMARY KEY (CODE);
ALTER TABLE STORAGES ADD CONSTRAINT PK_STORAGES PRIMARY KEY (CODE);
ALTER TABLE TABLESLIST ADD CONSTRAINT PK_TABLESLIST PRIMARY KEY (ID);
ALTER TABLE TANKS ADD PRIMARY KEY (ID);
ALTER TABLE TDB_ITEMS ADD CONSTRAINT PK_TDB_ITEMS PRIMARY KEY (ID);
ALTER TABLE TECHRETURN ADD CONSTRAINT PK_TECHRETURN PRIMARY KEY (ID);
ALTER TABLE TRADEDOCSINBILL ADD CONSTRAINT PK_TRADEDOCSINBILL PRIMARY KEY (ID);
ALTER TABLE USEROPTIONS ADD CONSTRAINT PK_USEROPTIONS PRIMARY KEY (ID);
ALTER TABLE USERS ADD CONSTRAINT PK_USERS PRIMARY KEY (ID);
ALTER TABLE WARES ADD CONSTRAINT PK_WARES PRIMARY KEY (CODE);


/******************************************************************************/
/*                                Foreign keys                                */
/******************************************************************************/

ALTER TABLE ACTIONLOG ADD CONSTRAINT FK_ACTIONLOG_1 FOREIGN KEY (USER_ID) REFERENCES USERS (ID);
ALTER TABLE CASHFLOW ADD CONSTRAINT FK_CASHFLOW_1 FOREIGN KEY (SESSION_ID) REFERENCES SESSIONS (ID);
ALTER TABLE CONTRACTS ADD CONSTRAINT FK_CONTRACTS_1 FOREIGN KEY (PARTNER_CODE) REFERENCES CONTRAGENTS (CODE);
ALTER TABLE HOSES ADD CONSTRAINT FK_HOSES_1 FOREIGN KEY (SESSION_ID) REFERENCES SESSIONS (ID);
ALTER TABLE INCOMESBYDISCHARGE ADD CONSTRAINT FK_INCOMESBYDISCHARGE_1 FOREIGN KEY (SESSION_ID) REFERENCES SESSIONS (ID);
ALTER TABLE INCOMESBYDISCHARGE ADD CONSTRAINT FK_INCOMESBYDISCHARGE_2 FOREIGN KEY (FUELEXTCODE) REFERENCES WARES (CODE);
ALTER TABLE INCOMESBYDISCHARGE ADD CONSTRAINT FK_INCOMESBYDISCHARGE_3 FOREIGN KEY (PARTNEREXTCODE) REFERENCES CONTRAGENTS (CODE);
ALTER TABLE INOUTGSM ADD CONSTRAINT FK_INOUTGSM_1 FOREIGN KEY (SESSION_ID) REFERENCES SESSIONS (ID);
ALTER TABLE INOUTGSM ADD CONSTRAINT FK_INOUTGSM_2 FOREIGN KEY (CLIENT_CODE) REFERENCES CONTRAGENTS (CODE);
ALTER TABLE INOUTGSM ADD CONSTRAINT FK_INOUTGSM_3 FOREIGN KEY (CONTRACT_ID) REFERENCES CONTRACTS (ID) ON DELETE SET NULL ON UPDATE SET NULL;
ALTER TABLE INOUTGSM ADD CONSTRAINT FK_INOUTGSM_4 FOREIGN KEY (PAYMENT_CODE) REFERENCES PAYMENTMODES (CODE);
ALTER TABLE INOUTGSM ADD CONSTRAINT FK_INOUTGSM_5 FOREIGN KEY (WARE_CODE) REFERENCES WARES (CODE);
ALTER TABLE INOUTGSM ADD CONSTRAINT FK_INOUTGSM_6 FOREIGN KEY (LASTUSER_ID) REFERENCES USERS (ID);
ALTER TABLE INOUTITEMS ADD CONSTRAINT FK_INOUTITEMS_1 FOREIGN KEY (SESSION_ID) REFERENCES SESSIONS (ID);
ALTER TABLE INOUTITEMS ADD CONSTRAINT FK_INOUTITEMS_2 FOREIGN KEY (CLIENT_CODE) REFERENCES CONTRAGENTS (CODE);
ALTER TABLE INOUTITEMS ADD CONSTRAINT FK_INOUTITEMS_3 FOREIGN KEY (CONTRACT_ID) REFERENCES CONTRACTS (ID);
ALTER TABLE INOUTITEMS ADD CONSTRAINT FK_INOUTITEMS_4 FOREIGN KEY (PAYMENT_CODE) REFERENCES PAYMENTMODES (CODE);
ALTER TABLE INOUTITEMS ADD CONSTRAINT FK_INOUTITEMS_5 FOREIGN KEY (ITEM_CODE) REFERENCES ITEMS (CODE);
ALTER TABLE INOUTITEMS ADD CONSTRAINT FK_INOUTITEMS_6 FOREIGN KEY (LASTUSER_ID) REFERENCES USERS (ID);
ALTER TABLE IOTANKSHOSES ADD CONSTRAINT FK_IOTANKSHOSES_1 FOREIGN KEY (SESSION_ID) REFERENCES SESSIONS (ID);
ALTER TABLE IOTANKSHOSES ADD CONSTRAINT FK_IOTANKSHOSES_2 FOREIGN KEY (WARECODE) REFERENCES WARES (CODE);
ALTER TABLE IOTANKSHOSES ADD CONSTRAINT FK_IOTANKSHOSES_3 FOREIGN KEY (LASTUSER_ID) REFERENCES USERS (ID);
ALTER TABLE ITEMOUTCOMESBYPAYSHEET ADD CONSTRAINT FK_ITEMOUTCOMESBYPAYSHEET_1 FOREIGN KEY (SESSION_ID) REFERENCES SESSIONS (ID);
ALTER TABLE ITEMOUTCOMESBYPAYSHEET ADD CONSTRAINT FK_ITEMOUTCOMESBYPAYSHEET_2 FOREIGN KEY (ITEMEXTCODE) REFERENCES ITEMS (CODE);
ALTER TABLE ITEMOUTCOMESBYPAYSHEET ADD CONSTRAINT FK_ITEMOUTCOMESBYPAYSHEET_3 FOREIGN KEY (PARTNEREXTCODE) REFERENCES CONTRAGENTS (CODE);
ALTER TABLE ITEMOUTCOMESBYPAYSHEET ADD CONSTRAINT FK_ITEMOUTCOMESBYPAYSHEET_4 FOREIGN KEY (PAYMENTMODEEXTCODE) REFERENCES PAYMENTMODES (CODE);
ALTER TABLE ITEMOUTCOMESBYRETAIL ADD CONSTRAINT FK_ITEMOUTCOMESBYRETAIL_1 FOREIGN KEY (ITEMEXTCODE) REFERENCES ITEMS (CODE);
ALTER TABLE ITEMOUTCOMESBYRETAIL ADD CONSTRAINT FK_ITEMOUTCOMESBYRETAIL_2 FOREIGN KEY (PAYMENTMODEEXTCODE) REFERENCES PAYMENTMODES (CODE);
ALTER TABLE ITEMOUTCOMESBYRETAIL ADD CONSTRAINT FK_ITEMOUTCOMESBYRETAIL_3 FOREIGN KEY (PARTNEREXTCODE) REFERENCES CONTRAGENTS (CODE);
ALTER TABLE ITEMOUTCOMESBYRETAIL ADD CONSTRAINT FK_ITEMOUTCOMESBYRETAIL_4 FOREIGN KEY (SESSION_ID) REFERENCES SESSIONS (ID);
ALTER TABLE ITEMRESTS ADD CONSTRAINT FK_ITEMRESTS_1 FOREIGN KEY (SESSION_ID) REFERENCES SESSIONS (ID);
ALTER TABLE ITEMRESTS ADD CONSTRAINT FK_ITEMRESTS_2 FOREIGN KEY (STORAGEEXTCODE) REFERENCES STORAGES (CODE);
ALTER TABLE ITEMRESTS ADD CONSTRAINT FK_ITEMRESTS_3 FOREIGN KEY (ITEMEXTCODE) REFERENCES ITEMS (CODE);
ALTER TABLE OUTCOMESBYCOUPON ADD CONSTRAINT FK_OUTCOMESBYCOUPON_1 FOREIGN KEY (SESSION_ID) REFERENCES SESSIONS (ID);
ALTER TABLE OUTCOMESBYOFFICE ADD CONSTRAINT FK_OUTCOMESBYOFFICE_1 FOREIGN KEY (FUELEXTCODE) REFERENCES WARES (CODE);
ALTER TABLE OUTCOMESBYOFFICE ADD CONSTRAINT FK_OUTCOMESBYOFFICE_2 FOREIGN KEY (PAYMENTMODEEXTCODE) REFERENCES PAYMENTMODES (CODE);
ALTER TABLE OUTCOMESBYOFFICE ADD CONSTRAINT FK_OUTCOMESBYOFFICE_3 FOREIGN KEY (SESSION_ID) REFERENCES SESSIONS (ID);
ALTER TABLE OUTCOMESBYRETAIL ADD CONSTRAINT FK_OUTCOMESBYRETAIL_1 FOREIGN KEY (SESSION_ID) REFERENCES SESSIONS (ID);
ALTER TABLE OUTCOMESBYRETAIL ADD CONSTRAINT FK_OUTCOMESBYRETAIL_2 FOREIGN KEY (FUELEXTCODE) REFERENCES WARES (CODE);
ALTER TABLE OUTCOMESBYRETAIL ADD CONSTRAINT FK_OUTCOMESBYRETAIL_3 FOREIGN KEY (PAYMENTMODEEXTCODE) REFERENCES PAYMENTMODES (CODE);
ALTER TABLE OUTCOMESBYRETAIL ADD CONSTRAINT FK_OUTCOMESBYRETAIL_4 FOREIGN KEY (PARTNEREXTCODE) REFERENCES CONTRAGENTS (CODE);
ALTER TABLE TANKS ADD CONSTRAINT FK_TANKS_1 FOREIGN KEY (SESSION_ID) REFERENCES SESSIONS (ID);
ALTER TABLE TDB_ITEMS ADD CONSTRAINT FK_TDB_ITEMS_1 FOREIGN KEY (BILL_ID) REFERENCES TRADEDOCSINBILL (ID);
ALTER TABLE TDB_ITEMS ADD CONSTRAINT FK_TDB_ITEMS_2 FOREIGN KEY (ITEMEXTCODE) REFERENCES ITEMS (CODE);
ALTER TABLE TECHRETURN ADD CONSTRAINT FK_TECHRETURN_1 FOREIGN KEY (SESSION_ID) REFERENCES SESSIONS (ID);
ALTER TABLE TECHRETURN ADD CONSTRAINT FK_TECHRETURN_2 FOREIGN KEY (FUELEXTCODE) REFERENCES WARES (CODE);
ALTER TABLE TRADEDOCSINBILL ADD CONSTRAINT FK_TRADEDOCSINBILL_1 FOREIGN KEY (SESSION_ID) REFERENCES SESSIONS (ID);
ALTER TABLE TRADEDOCSINBILL ADD CONSTRAINT FK_TRADEDOCSINBILL_2 FOREIGN KEY (PARTNEREXTCODE) REFERENCES CONTRAGENTS (CODE);
ALTER TABLE TRADEDOCSINBILL ADD CONSTRAINT FK_TRADEDOCSINBILL_3 FOREIGN KEY (STORAGESEXTCODE) REFERENCES STORAGES (CODE);
ALTER TABLE TRADEDOCSINBILL ADD CONSTRAINT FK_TRADEDOCSINBILL_4 FOREIGN KEY (FIRMSEXTCODE) REFERENCES FIRMS (CODE);
ALTER TABLE USEROPTIONS ADD CONSTRAINT FK_USEROPTIONS_1 FOREIGN KEY (USER_ID) REFERENCES USERS (ID);
ALTER TABLE WAREPRICES ADD CONSTRAINT FK_WAREPRICES_1 FOREIGN KEY (SESSION_ID) REFERENCES SESSIONS (ID);
ALTER TABLE WAREPRICES ADD CONSTRAINT FK_WAREPRICES_2 FOREIGN KEY (WARE_CODE) REFERENCES WARES (CODE);


/******************************************************************************/
/*                                  Indices                                   */
/******************************************************************************/

CREATE UNIQUE INDEX SESSIONS_IDX1 ON SESSIONS (AZSCODE, SESSIONNUM, STARTDATETIME);


/******************************************************************************/
/*                                  Triggers                                  */
/******************************************************************************/



SET TERM ^ ;



/******************************************************************************/
/*                            Triggers for tables                             */
/******************************************************************************/



/* Trigger: ACTIONLOG_BI */
CREATE OR ALTER TRIGGER ACTIONLOG_BI FOR ACTIONLOG
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_actionlog_id,1);
end
^

/* Trigger: CASHFLOW_BI */
CREATE OR ALTER TRIGGER CASHFLOW_BI FOR CASHFLOW
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_cashflow_id,1);
end
^

/* Trigger: CHOSES_BI */
CREATE OR ALTER TRIGGER CHOSES_BI FOR CHOSES
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_choses_id,1);
end
^

/* Trigger: CONTRACTS_BI */
CREATE OR ALTER TRIGGER CONTRACTS_BI FOR CONTRACTS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_contracts_id,1);
end
^

/* Trigger: CTANKS_BI */
CREATE OR ALTER TRIGGER CTANKS_BI FOR CTANKS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_ctanks_id,1);
end
^

/* Trigger: HOSES_BI */
CREATE OR ALTER TRIGGER HOSES_BI FOR HOSES
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_hoses_id,1);
end
^

/* Trigger: INCOMESBYDISCHARGE_BI */
CREATE OR ALTER TRIGGER INCOMESBYDISCHARGE_BI FOR INCOMESBYDISCHARGE
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_incomesbydischarge_id,1);
end
^

/* Trigger: INOUTGSM_BI */
CREATE OR ALTER TRIGGER INOUTGSM_BI FOR INOUTGSM
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_inoutgsm_id,1);
end
^

/* Trigger: INOUTITEMS_BI */
CREATE OR ALTER TRIGGER INOUTITEMS_BI FOR INOUTITEMS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_inoutitems_id,1);
end
^

/* Trigger: IOTANKSHOSES_BI */
CREATE OR ALTER TRIGGER IOTANKSHOSES_BI FOR IOTANKSHOSES
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_iotankshoses_id,1);
end
^

/* Trigger: ITEMOUTCOMESBYPAYSHEET_BI */
CREATE OR ALTER TRIGGER ITEMOUTCOMESBYPAYSHEET_BI FOR ITEMOUTCOMESBYPAYSHEET
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_itemoutcomesbypaysheet_id,1);
end
^

/* Trigger: ITEMOUTCOMESBYRETAIL_BI */
CREATE OR ALTER TRIGGER ITEMOUTCOMESBYRETAIL_BI FOR ITEMOUTCOMESBYRETAIL
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_itemoutcomesbyretail_id,1);
end
^

/* Trigger: ITEMRESTS_BI */
CREATE OR ALTER TRIGGER ITEMRESTS_BI FOR ITEMRESTS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_itemrests_id,1);
end
^

/* Trigger: OBO_TRUNCCODES_BI */
CREATE OR ALTER TRIGGER OBO_TRUNCCODES_BI FOR OUTCOMESBYOFFICE
INACTIVE BEFORE INSERT POSITION 0
AS
    declare n int;
begin
  /* Trigger text */
  n = char_length(new.fuelextcode);
  if (:n > 11) then
  begin
    new.fuelextcode = substring(new.fuelextcode from (:n - 10) for 11);
  end
end
^

/* Trigger: OBR_TRUNCCODES_BI */
CREATE OR ALTER TRIGGER OBR_TRUNCCODES_BI FOR OUTCOMESBYRETAIL
INACTIVE BEFORE INSERT POSITION 0
AS
    declare n int;
begin
  /* Trigger text */
  n = char_length(new.fuelextcode);
  if (:n > 11) then
  begin
    new.fuelextcode = substring(new.fuelextcode from :n - 10 for 11);
  end
end
^

/* Trigger: ORDERS_BI */
CREATE OR ALTER TRIGGER ORDERS_BI FOR ORDERS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_orders_id,1);
end
^

/* Trigger: OUTCOMESBYCOUPON_BI */
CREATE OR ALTER TRIGGER OUTCOMESBYCOUPON_BI FOR OUTCOMESBYCOUPON
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_outcomesbycoupon_id,1);
end
^

/* Trigger: OUTCOMESBYOFFICE_BI */
CREATE OR ALTER TRIGGER OUTCOMESBYOFFICE_BI FOR OUTCOMESBYOFFICE
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_outcomesbyoffice_id,1);
end
^

/* Trigger: OUTCOMESBYRETAIL_BI */
CREATE OR ALTER TRIGGER OUTCOMESBYRETAIL_BI FOR OUTCOMESBYRETAIL
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_outcomesbyretail_id,1);
end
^

/* Trigger: SESSIONS_BI */
CREATE OR ALTER TRIGGER SESSIONS_BI FOR SESSIONS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_sessions_id,1);
end
^

/* Trigger: TABLESLIST_BI */
CREATE OR ALTER TRIGGER TABLESLIST_BI FOR TABLESLIST
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_tableslist_id,1);
end
^

/* Trigger: TANKS_BI */
CREATE OR ALTER TRIGGER TANKS_BI FOR TANKS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_tanks_id,1);
end
^

/* Trigger: TDB_ITEMS_BI */
CREATE OR ALTER TRIGGER TDB_ITEMS_BI FOR TDB_ITEMS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_tdb_items_id,1);
end
^

/* Trigger: TECHRETURN_BI */
CREATE OR ALTER TRIGGER TECHRETURN_BI FOR TECHRETURN
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_techreturn_id,1);
end
^

/* Trigger: TRADEDOCSINBILL_BI */
CREATE OR ALTER TRIGGER TRADEDOCSINBILL_BI FOR TRADEDOCSINBILL
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_tradedocsinbill_id,1);
end
^

/* Trigger: USEROPTIONS_BI */
CREATE OR ALTER TRIGGER USEROPTIONS_BI FOR USEROPTIONS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_useroptions_id,1);
end
^

/* Trigger: USERS_BI */
CREATE OR ALTER TRIGGER USERS_BI FOR USERS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_users_id,1);
end
^
SET TERM ; ^



/******************************************************************************/
/*                             Stored procedures                              */
/******************************************************************************/



SET TERM ^ ;

CREATE OR ALTER PROCEDURE ADDTANKS (
    AZSCODE VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    SESSION_ID INTEGER NOT NULL)
AS
declare variable tanknum varchar(10);
declare variable hosenum integer;
declare variable t varchar(10);
declare variable hid integer not null;
declare variable w varchar(16);
begin
    for select tanknum from ctanks where azscode=:azscode into :tanknum do
    begin
        if (not exists (select * from tanks
            where session_id=:session_id and tanknum=:tanknum)) then
        begin
            insert into tanks 
             (session_id,  tanknum, enddensity, STARTFUELVOLUME, ENDFACTVOLUME, ENDTEMPERATURE,
                ENDHEIGHT, ENDMASS, ENDWATER, DEADREST, DEADRESTLITER, WARECODE)
             values
             (:session_id, :tanknum,  0,0,0, 0,
                0,0,0,0,0,'');
        end
    end

    for select hosenum, c.tanknum from choses c join ctanks t on c.tanknum = t.tanknum and c.azscode=t.azscode
        where c.azscode = :azscode
        into :hosenum, :tanknum do
    begin
        if (not exists (select * from hoses
            where session_id=:session_id and hosenum=:hosenum)) then
        begin
            insert into hoses
             (session_id,  hosenum, STARTCOUNTER, ENDCOUNTER, PUMPNUM,
                NUMINPUMP, HOSETYPE, TANKNUM)
             values
             (:session_id, :hosenum,  0,0,0,
                0,'',:tanknum);
        end
    end

    for select id, tanknum, hosenum from hoses
            where session_id = :session_id into :hid, :t, :hosenum
            do
    begin
        if (:t is null) then
        begin
            select tanknum from choses where azscode=:azscode and hosenum = :hosenum into :tanknum;
            update hoses set tanknum = :tanknum where id = :hid;

        end

    end

    for select id, warecode from tanks
            where session_id = :session_id into :hid, :w
            do
    begin
        if (:w is null) then
        begin
            select first 1 code from wares into :w;
            update tanks set warecode = :w where id = :hid;

        end

    end

end
/*
    SESSION_ID       INTEGER NOT NULL,
    TANKNUM          VARCHAR(10) NOT NULL,
    ENDDENSITY       DOUBLE PRECISION NOT NULL,
    STARTFUELVOLUME  DOUBLE PRECISION NOT NULL,
    ENDFACTVOLUME    DOUBLE PRECISION DEFAULT 0 NOT NULL,
    ENDTEMPERATURE   DOUBLE PRECISION DEFAULT 0 NOT NULL,
    ENDHEIGHT        DOUBLE PRECISION DEFAULT 0 NOT NULL,
    ENDMASS          DOUBLE PRECISION DEFAULT 0 NOT NULL,
    ENDWATER         DOUBLE PRECISION DEFAULT 0,
    DEADREST         DOUBLE PRECISION DEFAULT 0 NOT NULL,
    DEADRESTLITER    DOUBLE PRECISION DEFAULT 0 NOT NULL,
    WARECODE         VARCHAR(16)
hoses
    SESSION_ID    INTEGER NOT NULL,
    HOSENUM       INTEGER NOT NULL,
    STARTCOUNTER  DOUBLE PRECISION NOT NULL,
    ENDCOUNTER    DOUBLE PRECISION NOT NULL,
    PUMPNUM       INTEGER NOT NULL,
    NUMINPUMP     INTEGER NOT NULL,
    HOSETYPE      VARCHAR(16),
    TANKNUM       VARCHAR(10)

    */^


CREATE OR ALTER PROCEDURE CALCINCOMES (
    SESSION_ID INTEGER NOT NULL,
    TANKNUM VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8)
RETURNS (
    VOLUME DOUBLE PRECISION NOT NULL)
AS
declare variable vt double precision;
declare variable v double precision;
begin
/*
    select sum(volume) from incomesbydischarge
            where session_id = :session_id
                and tanknum=:tanknum
    into :v;
    if (:v is null) then v = 0;

    volume = :v;
    */
    /*
    select sum(volume) from incomesbydischarge
            where session_id = :session_id
                and tanknum=:tanknum
    into :v;
    if (:v is null) then v = 0;
    select sum(volume) from techreturn
            where session_id = :session_id
                and tanknum=:tanknum
    into :vt;
    if (:vt is null) then vt = 0;
    volume = :v+:vt;
    */
    select sum(invol) from iotankshoses
            where session_id = :session_id
                and tanknum=:tanknum
    into :v;
    if (:v is null) then v = 0;

    volume = :v;
  suspend;
end^


CREATE OR ALTER PROCEDURE CALCINCOMES0 (
    SESSION_ID INTEGER NOT NULL)
RETURNS (
    VOLUME DOUBLE PRECISION,
    SID INTEGER,
    TNUM VARCHAR(10) CHARACTER SET UTF8 COLLATE UTF8)
AS
declare variable cnt integer;
declare variable t varchar(10);
declare variable vt double precision;
declare variable numhoses integer not null;
begin
cnt = 0;

for
    select tanknum, sum(v) as vol from (
     select tanknum, coalesce(volume, 0) as v from incomesbydischarge
            where session_id = :session_id
     union all
     select tanknum, coalesce(volume, 0) as v from techreturn
            where session_id = :session_id
    )
    group by tanknum
    into :t, :vt
    do
    begin
        select count(*) from hoses where tanknum=:t and session_id=:session_id
            into :numhoses;
        if(:numhoses = 0) then numhoses = 1;
        if (:vt is null) then vt = 0;

        volume = :vt / :numhoses;
        sid = :session_id;
        tnum = :t;
        cnt = :cnt + 1;
        suspend;
    end
    if (:cnt = 0) then
    begin
       volume = 0;
        sid = :session_id;
        tnum = :t;
       suspend;
    end
end^


CREATE OR ALTER PROCEDURE CALCOUTCOMES (
    SESSION_ID INTEGER NOT NULL,
    TANKNUM VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    HOSENUM INTEGER NOT NULL)
RETURNS (
    VOLUME DOUBLE PRECISION NOT NULL)
AS
declare variable v double precision;
begin
/*
    select sum(v) from
        (select sum(volume) as v from outcomesbyretail r
            where r.session_id = :session_id
                and r.tanknum=:tanknum
                and r.hosename=cast(:hosenum as varchar(10))
  */
      select sum(v) from
        (select sum(volume) as v from iotankshoses r
            where r.session_id = :session_id
                and r.tanknum=:tanknum
                and r.hosenum=:hosenum

                /* TODO ADD COUPONS */


        /*  NO OFFICE!!!
        union all
        select sum(volume) as v from outcomesbyoffice
            where session_id = :session_id
                and tanknum=:tanknum
                and hosename=cast(:hosenum as varchar(10))
        */
        )
    into :v;
    if(:v is null)then v = 0;
    volume = :v;
    suspend;
end^


CREATE OR ALTER PROCEDURE CALCREST (
    SESSION_ID INTEGER NOT NULL,
    TANKNUM VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8)
RETURNS (
    VOLUME DOUBLE PRECISION NOT NULL)
AS
declare variable v double precision;
begin
--      select sum(v) from
--        (
        select max(endfactvolume) - sum(volume) as v from iotankshoses r
            where r.session_id = :session_id
                and r.tanknum=:tanknum

--        )
                /* TODO ADD COUPONS */

    into :v;
    if(:v is null)then v = 0;
    volume = :v;
    suspend;
end^


CREATE OR ALTER PROCEDURE GETPRICE (
    "MOD" SMALLINT NOT NULL,
    SESSION_ID INTEGER NOT NULL,
    WARECODE VARCHAR(16) CHARACTER SET UTF8 NOT NULL COLLATE UTF8)
RETURNS (
    PRICE DOUBLE PRECISION NOT NULL)
AS
declare variable p double precision;
begin
  /* Procedure Text */
  if (mod = 0) then
  begin
  select price_o from wareprices where session_id=:session_id and ware_code = :warecode into :p;
  if (:p is null) then
  begin
      select price_r from wareprices where session_id=:session_id  and ware_code = :warecode into :p;
  end
  if (:p is null) then
  begin
      select price_o from wares where code=:warecode into :p;
  end
  if (:p is null) then
  begin
      select price_r from wares where code=:warecode into :p;
  end
  if (:p is null) then
  begin
      p = -1;
  end
  end
  else
  begin

  select price_r from wareprices where session_id=:session_id  and ware_code = :warecode into :p;
  if (:p is null) then
  begin
      select price_r from wares where code=:warecode into :p;
  end
  if (:p is null) then
  begin
      p = -1;
  end
  end
  price = :p;
  suspend;
end^


CREATE OR ALTER PROCEDURE GIOPRICE (
    ID INTEGER NOT NULL)
RETURNS (
    PRICE DOUBLE PRECISION)
AS
declare variable p double precision;
begin
  select price from inoutgsm where id=:id into :p;
  price = :p;
  suspend;
end^


CREATE OR ALTER PROCEDURE LOADTS (
    SESSION_ID INTEGER NOT NULL)
AS
declare variable startcounter double precision;
declare variable hosenum integer not null;
declare variable pumpnum integer;
declare variable endcounter double precision;
declare variable numinpump integer;
declare variable hosetype varchar(16);
declare variable tanknum varchar(10);
begin
  for select
    h.hosenum,
    h.startcounter,
    h.endcounter,
    h.pumpnum,
    h.numinpump,
    h.hosetype,
    h.tanknum
    from hoses h where session_id=:session_id
        into
        :hosenum, 
        :startcounter,
        :endcounter,
        :pumpnum,
        :numinpump,
        :hosetype,
        :tanknum
do
    begin

    end

  suspend;
end^


CREATE OR ALTER PROCEDURE OUTCOMEPM (
    SESSION_ID INTEGER NOT NULL,
    PM VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8)
RETURNS (
    VOLUME DOUBLE PRECISION NOT NULL)
AS
declare variable v double precision;
begin
  v = 0;
  select sum(volume) as v from outcomesbyretail
    where session_id = :session_id
       and paymentmodeextcode = :pm
          into :v;

    if(:v is null)then v = 0;
    volume = :v;  suspend;
end^


CREATE OR ALTER PROCEDURE RESTOREIOTHREC (
    SESSION_ID INTEGER NOT NULL,
    AZSCODE VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    TANKNUM VARCHAR(10) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
    HOSENUM INTEGER NOT NULL)
AS
declare variable scnt double precision not null;
declare variable ecnt double precision not null;
declare variable density double precision;
declare variable stv double precision;
declare variable etv double precision;
declare variable volume double precision;
declare variable invol double precision;
declare variable sid integer not null;
declare variable tnum varchar(10) not null;
declare variable cnt integer;
declare variable temperature double precision;
declare variable water double precision;
declare variable mass double precision;
declare variable height double precision;
begin

  for select distinct
  t.startfuelvolume,
  t.endfactvolume,
  t.enddensity,
  h.startcounter,
  h.endcounter,
  sum(o.volume) as volume,
  t.endtemperature,
  t.endwater,
  t.endmass,
  t.endheight

                from
                    hoses h
                    inner join tanks t on h.tanknum = t.tanknum
                    join sessions s on s.id = h.session_id
      join outcomesbyretail o on (
            o.session_id=s.id and
            o.tanknum=t.tanknum and
            h.hosenum=cast(o.hosename as integer))

                where t.session_id = :session_id
                    and s.id = t.session_id
                    and s.id = t.session_id
                    and t.tanknum = :tanknum
                    and h.hosenum = :hosenum
       group by
          t.startfuelvolume,
          t.endfactvolume,
          t.enddensity,
          h.startcounter,
          h.endcounter,
          t.endtemperature,
          t.endwater,
          t.endmass,
          t.endheight
            into :stv, :etv, :density, :scnt, :ecnt, :volume,
                :temperature, :water, :mass, :height
    do
    begin
        update iotankshoses
        set density = :density, 
            startfuelvolume = :stv, 
            endfactvolume = :etv,
            startcounter = :scnt, 
            endcounter = :ecnt,
            volume = :volume,
            temperature = :temperature,
            water = :water, 
            mass = :mass,
            height = :height
        where
            session_id = :session_id
            and azscode = :azscode
            and tanknum = :tanknum
            and hosenum = :hosenum
            ;
    end
    cnt = 0;
    for
        select volume, sid, tnum from
            sessions s
            join
            (select volume, sid, tnum from calcincomes0(:session_id)) ss
                on ss.sid=s.id
            where tnum = :tanknum
            into :invol,  :sid, :tnum
    do
    begin
        if (:invol is null) then invol = 0;
        update iotankshoses set invol = :invol
            where session_id=:session_id and tanknum = :tanknum;
        cnt = :cnt + 1;
    end
    if (:cnt = 0) then
    begin
        update iotankshoses set invol = 0
            where session_id=:session_id and tanknum = :tanknum;

    end

/*  suspend; */
end^


CREATE OR ALTER PROCEDURE RESTOREIOTHREC_I (
    SESSION_ID INTEGER,
    TANKNUM VARCHAR(10) CHARACTER SET UTF8 COLLATE UTF8)
AS
declare variable sid integer;
declare variable tnum varchar(10);
declare variable invol double precision;
begin
    for
        select volume, sid, tnum from
            sessions s
            join
            (select volume, sid, tnum from calcincomes0(:session_id)) ss
                on ss.sid=s.id
            where tnum = :tanknum
            into invol,  :sid, :tnum
    do
    begin
        if (:invol is null) then invol = 0;
        update iotankshoses set invol = :invol
            where session_id=:session_id and tanknum = :tanknum;
    end
end^



SET TERM ; ^



/******************************************************************************/
/*                                Descriptions                                */
/******************************************************************************/

COMMENT ON TABLE CTANKS IS
'    catalog
      tanks';



/******************************************************************************/
/*                            Fields descriptions                             */
/******************************************************************************/

COMMENT ON COLUMN INOUTGSM.DIRECTION IS
'0 - out  1 -in';

COMMENT ON COLUMN INOUTGSM.CLIENT_CODE IS
'fk to contragents';

COMMENT ON COLUMN INOUTGSM.CONTRACT_ID IS
'fk to contracts';

COMMENT ON COLUMN INOUTGSM.PAYMENT_CODE IS
'fk to paymentmodes';

COMMENT ON COLUMN INOUTGSM.WARE_CODE IS
'fk to wares';

COMMENT ON COLUMN INOUTGSM.LASTUSER_ID IS
'fk to users';

COMMENT ON COLUMN INOUTGSM.STATE IS
'0 - new 1 - in process 2 - completed';

COMMENT ON COLUMN ITEMOUTCOMESBYRETAIL.ITEMGRPEXTCODE IS
'" ';

COMMENT ON COLUMN ITEMOUTCOMESBYRETAIL.ITEMCODE IS
'icode in @items@';

COMMENT ON COLUMN OUTCOMESBYCOUPON.SESSIONID IS
'as in source xml';

COMMENT ON COLUMN OUTCOMESBYRETAIL.FUELNAME IS
'doubles, no need';

COMMENT ON COLUMN OUTCOMESBYRETAIL.PAYMENTMODENAME IS
'see table  paymentmodes';

COMMENT ON COLUMN OUTCOMESBYRETAIL.FUELEXTCODE IS
'link to wares, 1C ware code';

COMMENT ON COLUMN OUTCOMESBYRETAIL.PAYMENTMODEEXTCODE IS
'to table paymentmodes';

COMMENT ON COLUMN OUTCOMESBYRETAIL.PARTNEREXTCODE IS
'1C code, link to contragents';

COMMENT ON COLUMN OUTCOMESBYRETAIL.REMARK IS
'wtf?';

COMMENT ON COLUMN USERS."ROLE" IS
'0 user 1 admin';

